@model IEnumerable<DTO.Orders>

@{
    ViewData["Title"] = "GetOrdersRelativeToStaff";
}

<h2>GetOrdersRelativeToStaff</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.idOrder)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.scheduled_at)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.delivered_at)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.fk_idCustomer)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.idOrder)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.scheduled_at)
            </td>
            <td>
                @if (item.status.Equals("ongoing"))
                {
                    DateTime scheduled_at = (DateTime)item.scheduled_at;
                    DateTime now = DateTime.Now;

                    TimeSpan diff = scheduled_at.Subtract(now);

                    string t = diff.ToString(@"hh");
                    int te = Int32.Parse(t);

                    if (now < scheduled_at)
                    {
                        if (te > 2) 
                        {
                            <span style="color:green;">
                                @diff.ToString(@"hh") h @diff.ToString(@"mm") left
                            </span>
                        }

                        if (te < 1)
                        {
                            <span style="color:red;">
                                @diff.ToString(@"hh") h @diff.ToString(@"mm") left
                            </span>
                        }

                        if (te < 2 && te > 1)
                        {
                            <span style="color:orange;">
                                @diff.ToString(@"hh") h @diff.ToString(@"mm") left
                            </span>
                        }
                    }
                    else
                    {
                        <span style="color:red;">
                            LATE
                        </span>
                    }
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.delivered_at)
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.fk_idCustomer)
            </td>
            <td>
                @*
            Need to be redirect to Edit (change status + delivered_at)
            which will redirect to GetOrdersRelativeToStaff
                *@

                @if (item.status.Equals("delivered"))
                {
                    <input type="submit" class="btn btn-info btn-sm disabled" value="Delivered">
                }
                else
                {
                    <input type="button" class="btn btn-info btn-sm active" value="Delivered" onclick="@("window.location.href='" + @Url.Action("Edit", "Orders", new { id = item.idOrder, @ViewBag.username }) + "'");" />
                    @*<input type="submit" class="btn btn-info btn-sm active" value="Delivered">*@
                }

                @*@Html.ActionLink("Edit", "Edit", new { id = item.idOrder, @ViewBag.username })*@
            </td>
        </tr>
}
    </tbody>
</table>
