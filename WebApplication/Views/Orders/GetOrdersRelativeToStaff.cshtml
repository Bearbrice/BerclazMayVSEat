@model IEnumerable<WebApplication.Models.OrderRelativeToStaffWithCustomer>

@{
    ViewData["Title"] = "GetOrdersRelativeToStaff";
    Layout = "~/Views/Shared/_LayoutStaffView.cshtml";
}

<h2>My deliveries</h2>

<table class="table">
    <thead>
        <tr style="background-color:darkcyan; color:white">
            <th>
                N°
                @*@Html.DisplayNameFor(model => model.idOrder)*@
            </th>
            <th>
                Status
                @*@Html.DisplayNameFor(model => model.status)*@
            </th>
            <th>
                Scheduled
                @*@Html.DisplayNameFor(model => model.scheduled)*@
            </th>
            <th>
                Delivered
                @*@Html.DisplayNameFor(model => model.delivered)*@
            </th>
            <th>
                Customer
                @*@Html.DisplayNameFor(model => model.customerName)*@
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.idOrder)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.scheduled)
            </td>
            <td>
               
                @if (item.status.Equals("ongoing"))
                {
                    DateTime scheduled_at = (DateTime)item.scheduled;
                    DateTime now = DateTime.Now;

                    TimeSpan diff = scheduled_at.Subtract(now);

                    string t = diff.ToString(@"hh");
                    int te = Int32.Parse(t);

                    if (now < scheduled_at)
                    {
                        if (te >= 2)
                        {
                            <span style="color:green;">
                                @diff.ToString(@"hh") h @diff.ToString(@"mm") left
                            </span>
                        }

                        if (te < 1)
                        {
                            <span style="color:red;">
                                @diff.ToString(@"hh") h @diff.ToString(@"mm") left
                            </span>
                        }

                        if (te < 2 && te >= 1)
                        {
                            <span style="color:orange;">
                                @diff.ToString(@"hh") h @diff.ToString(@"mm") left
                            </span>
                        }
                    }
                    else
                    {
                        <span style="color:red;">
                            <b>
                                LATE
                            </b>
                        </span>
                    }
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.delivered)
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.customerName)
            </td>
            <td align="center">
                @if (item.status.Equals("delivered"))
                {
                    <input type="submit" class="btn btn-info btn-sm disabled" value="Delivered">
                }
                else
                {
                    <input type="button" class="btn btn-info btn-sm active" value="Delivered" onclick="@("window.location.href='" + @Url.Action("Edit", "Orders", new { id = item.idOrder, @ViewBag.username }) + "'");" />
                    @*<input type="submit" class="btn btn-info btn-sm active" value="Delivered">*@
                }
                
                @*CHECK WITH BRICE THE REDIRECTION*@
                <input type="button" class="btn btn-info btn-sm active" value="Details" onclick="@("window.location.href='" + @Url.Action("GetOrderDetails", "Orders", new { id = item.idOrder }) + "'");" />
            </td>
        </tr>
}
    </tbody>
</table>
